	/**
	 * 添加记录
	 * <p>创建人：@{创建人}</p>
	 * <p>创建时间：@{创建时间}</p>
	 * @param orm 添加对象
	 * @return
	 */
	@PostMapping("/insert")
	@ResponseBody
	public @{returnResult_handle} insert(@RequestBody @{orm类名} orm) throws Exception {
		return svc.insert(orm);
	}
	/**
	 * 修改记录
	 * <p>创建人：@{创建人}</p>
	 * <p>创建时间：@{创建时间}</p>
	 * @param orm 修改对象
	 * @return
	 */
	@PostMapping("/update")
	@ResponseBody
	public @{returnResult_handle} update(@RequestBody @{orm类名} orm) throws Exception {
		return svc.update(orm);
	}
	/**
	 * 删除记录
	 * <p>创建人：@{创建人}</p>
	 * <p>创建时间：@{创建时间}</p>
	 * @param id 主键
	 * @return
	 */
	@PostMapping("/delete")
	@ResponseBody
	public @{returnResult_handle} delete(String id) throws Exception {
		return svc.delete(id);
	}
	/**
	 * 根据ID获取单条记录
	 * <p>创建人：@{创建人}</p>
	 * <p>创建时间：@{创建时间}</p>
	 * @param id 主键
	 * @return
	 */
	@PostMapping("/findone")
	@ResponseBody
	public @{returnResult_findone} findOne(String id) throws Exception {
		return svc.findOne(id);
	}
	/**
	 * 根据模型对象获取多条记录
	 * <p>创建人：@{创建人}</p>
	 * <p>创建时间：@{创建时间}</p>
	 * @param orm 模型对象
	 * @return 数据列表
	 */
	@PostMapping("/findmore")
	@ResponseBody
	public @{returnResult_findlist} findMore(@RequestBody @{orm类名} orm) throws Exception {
		return svc.findMore(orm);
	}